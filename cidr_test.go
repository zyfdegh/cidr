package cidr

import (
	"testing"

	"github.com/bmizerany/assert"
)

func TestRangeCIDR(t *testing.T) {
	cases := []struct {
		CIDR           string
		ExpectFromAddr string
		ExpectToAddr   string
		ExpectErr      error
	}{
		// 使用 Linux 工具 ipcalc 可以计算标准的 CIDR 范围
		{"", "", "", nil},
		{"0.0.0.0/8", "0.0.0.1", "0.255.255.255", nil},
		{"100.0.0.0/11", "100.0.0.1", "100.31.255.255", nil},
		{"10.0.0.0/8", "10.0.0.1", "10.255.255.255", nil},
		{"1.0.0.0/24", "1.0.0.1", "1.0.0.255", nil},
		{"100.128.0.0/9", "100.128.0.1", "100.255.255.255", nil},
		{"103.174.64.0/18", "103.174.64.1", "103.174.127.255", nil},
		{"103.9.144.0/22", "103.9.144.1", "103.9.147.255", nil},
		{"110.203.0.0/17", "110.203.0.1", "110.203.127.255", nil},
		{"112.95.129.64/26", "112.95.129.65", "112.95.129.127", nil},
		{"118.213.82.128/25", "118.213.82.129", "118.213.82.255", nil},
		{"125.120.133.0/24", "125.120.133.1", "125.120.133.255", nil},
		// {"202.103.59.168/31", "202.103.59.168", "202.103.59.169", nil},
		{"218.22.167.80/29", "218.22.167.81", "218.22.167.87", nil},
		{"220.161.193.136/29", "220.161.193.137", "220.161.193.143", nil},
		{"222.241.190.247/32", "222.241.190.247", "222.241.190.247", nil},
		{"192.168.10.0/20", "192.168.0.1", "192.168.15.255", nil},
		{"206.0.64.0/18", "206.0.64.1", "206.0.127.255", nil},
	}
	for _, c := range cases {
		gotFromAddr, gotToAddr, gotErr := RangeCIDR(c.CIDR)
		assert.Equal(t, gotFromAddr, c.ExpectFromAddr)
		assert.Equal(t, gotToAddr, c.ExpectToAddr)
		assert.Equal(t, gotErr, c.ExpectErr)
	}
}
